<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CreateDevice" xml:space="preserve">
    <value>INSERT INTO Аппараты (Аппараты.Аппарат,Аппараты.Мощность,Аппараты.РИЦ,Аппараты.[Время в минутах],Аппараты.[Дата замера мощности]) VALUES(?,?,?,?,?);</value>
    <comment>SQL запрос с параметрами для добавления 1 аппарата в БД</comment>
  </data>
  <data name="Device" xml:space="preserve">
    <value>SELECT * FROM Аппараты;</value>
    <comment>SQL запрос для получения списка параметров аппаратов из БД</comment>
  </data>
  <data name="DeviceCheckPower_Table" xml:space="preserve">
    <value>Аппараты.[Дата замера мощности]</value>
    <comment>Имя столбца в БД с датой замера мощности аппарата</comment>
  </data>
  <data name="DeviceName_Table" xml:space="preserve">
    <value>Аппараты.Аппарат</value>
    <comment>Имя столбца в БД с названием аппарата</comment>
  </data>
  <data name="DevicePower_Table" xml:space="preserve">
    <value>Аппараты.Мощность</value>
    <comment>Имя столбца в БД с мощностью аппарата</comment>
  </data>
  <data name="DeviceSCD_Table" xml:space="preserve">
    <value>Аппараты.РИЦ</value>
    <comment>Имя столбца в БД с РИЦ аппарата</comment>
  </data>
  <data name="DeviceTime_Table" xml:space="preserve">
    <value>Аппараты.[Время в минутах]</value>
    <comment>Имя столбца в БД с требуемой единицей расчетов для аппарата</comment>
  </data>
  <data name="Kb" xml:space="preserve">
    <value>SELECT Кб.Кб FROM Кб WHERE Кб.РИЦ=? AND Кб.A=? AND Кб.B=?;</value>
    <comment>SQL запрос для получения значения коэффициента Кб из БД</comment>
  </data>
  <data name="Kb_A" xml:space="preserve">
    <value>Кб.A</value>
    <comment>Имя столбца со значением A в таблице Кб в БД</comment>
  </data>
  <data name="Kb_B" xml:space="preserve">
    <value>Кб.B</value>
    <comment>Имя столбца со значением B в таблице Кб в БД</comment>
  </data>
  <data name="Kb_SCD" xml:space="preserve">
    <value>Кб.РИЦ</value>
    <comment>Имя столбца со значением РИЦ в таблице Кб в БД</comment>
  </data>
  <data name="Lung" xml:space="preserve">
    <value>SELECT [Легочная ткань].L FROM [Легочная ткань] WHERE [Легочная ткань].[Толщина легкого]=? AND [Легочная ткань].[Расстояние от точки расчета до легкого (не более)]=?;</value>
    <comment>SQL запрос для получения значения коэффициента L из БД</comment>
  </data>
  <data name="Lung_Distance" xml:space="preserve">
    <value>[Легочная ткань].[Расстояние от точки расчета до легкого (не более)]</value>
    <comment>Имя столбца со значением [Расстояние от точки расчета до легкого (не более)] в таблице [Легочная ткань] в БД</comment>
  </data>
  <data name="Lung_Thickness" xml:space="preserve">
    <value>[Легочная ткань].[Толщина легкого]</value>
    <comment>Имя столбца со значением [Толщина легкого] в таблице [Легочная ткань] в БД</comment>
  </data>
  <data name="OTV" xml:space="preserve">
    <value>SELECT ОТВ.ОТВ FROM ОТВ WHERE ОТВ.Глубина=? AND ОТВ.B=? AND ОТВ.A=?;</value>
    <comment>SQL запрос для получения значения коэффициента ОТВ из БД</comment>
  </data>
  <data name="OTV_A" xml:space="preserve">
    <value>ОТВ.A</value>
    <comment>Имя столбца со значением A в таблице ОТВ в БД</comment>
  </data>
  <data name="OTV_B" xml:space="preserve">
    <value>ОТВ.B</value>
    <comment>Имя столбца со значением B в таблице ОТВ в БД</comment>
  </data>
  <data name="OTV_Depth" xml:space="preserve">
    <value>ОТВ.Глубина</value>
    <comment>Имя столбца со значением Глубина в таблице ОТВ в БД</comment>
  </data>
  <data name="UpdateDevice" xml:space="preserve">
    <value>UPDATE Аппараты SET Аппараты.Мощность=?, Аппараты.[Дата замера мощности]=? WHERE Аппараты.Аппарат=?;</value>
    <comment>SQL запрос с параметрами для редактирования мощности 1 аппарата в БД</comment>
  </data>
</root>